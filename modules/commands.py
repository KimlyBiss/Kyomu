import discord
import random
import asyncio
import os
from dotenv import load_dotenv
from discord.ui import Button, View
from discord import app_commands
from discord.ext import commands
from modules.logger import logger

load_dotenv()
USER_ID = os.getenv("USER_ID")

class BioEmbed(discord.Embed):
    pass

class BattleView(View):
    def __init__(self, player1, player2, inventory_manager):
        super().__init__(timeout=90)
        self.player1 = player1
        self.player2 = player2
        self.inventory_manager = inventory_manager
        self.message_delay = 3  # –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É —Å–æ–±—ã—Ç–∏—è–º–∏

    async def determine_winner(self):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è —Å 20% —à–∞–Ω—Å–æ–º –Ω–∏—á—å–µ–π"""
        if random.random() < 0.2:
            return None
        return random.choice([self.player1, self.player2])

    async def give_reward(self, winner):
        # –®–∞–Ω—Å –Ω–∞–≥—Ä–∞–¥—ã % –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
        if random.random() < 0.1:
            rarities = {"common": 0.6, "uncommon": 0.3, "rare": 0.1}
            rarity = random.choices(list(rarities.keys()), weights=list(rarities.values()))[0]
            items = [k for k, v in self.inventory_manager.items.items() if v["rarity"] == rarity]
            
            if not items:
                return "üåÄ –ö—ë–º—É –ø–æ—Ç–µ—Ä—è–ª –Ω–∞–≥—Ä–∞–¥—É!"
                
            item_id = random.choice(items)
            user_id = str(winner.id)
            self.inventory_manager.inventories.setdefault(user_id, {})
            self.inventory_manager.inventories[user_id][item_id] = self.inventory_manager.inventories[user_id].get(item_id, 0) + 1
            self.inventory_manager.save_inventories()
            return f"**–ù–∞–≥—Ä–∞–¥–∞:** {self.inventory_manager.items[item_id]['name']}"
        else:
            praises = [
                "–õ—É–Ω–∞ –≤–æ—Å—Ö–∏—â–∞–µ—Ç—Å—è —Ç–≤–æ–µ–π –¥–æ–±–ª–µ—Å—Ç—å—é! üåô",
                "–î—É—Ö–∏ –¥–∞—Ä—è—Ç —Ç–µ–±–µ —Å–≤–æ—é –±–ª–∞–≥–æ–¥–∞—Ç—å! üéé",
                "–ö—ë–º—É –≤—Ä—É—á–∞–µ—Ç —Ç–µ–±–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–π –≤–µ–µ—Ä! ü™≠"
            ]
            return f"**–ü–æ—Ö–≤–∞–ª–∞:** {random.choice(praises)}"

    def generate_actions(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π (–∞—Ç–∞–∫–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è) –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –∏ –æ–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è"""
        return [
            # –î–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–∞ 1
            lambda: f"{self.player1.mention} –∑–∞–ø—É—Å–∫–∞–µ—Ç –≥—Ä–∞–¥ –∂–µ–ª—É–¥–µ–π! üå∞üí•",
            lambda: f"{self.player1.mention} –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–π —á–∞–π–Ω–∏–∫! ü´ñüî•",
            lambda: f"{self.player1.mention} –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–∞–Ω–µ—Ü —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–æ–≤! üéÜ‚ú®",
            lambda: f"{self.player1.mention} –Ω–∞–Ω–æ—Å–∏—Ç —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —É–¥–∞—Ä! ü•ä",
            lambda: f"{self.player1.mention} –º–µ—Ç–∫–æ –±—å–µ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞! üéØ",
            # –î–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–∞ 2
            lambda: f"{self.player2.mention} –ø–∞—Ä–∏—Ä—É–µ—Ç —É–¥–∞—Ä –±—É–º–∞–∂–Ω—ã–º –∑–æ–Ω—Ç–æ–º! ‚òÇÔ∏èüåÄ",
            lambda: f"{self.player2.mention} —Å–æ–∑–¥–∞–µ—Ç –±–∞—Ä—å–µ—Ä –∏–∑ —Ä–∏—Å–æ–≤—ã—Ö –ª–µ–ø–µ—à–µ–∫! üçòüõ°Ô∏è",
            lambda: f"{self.player2.mention} –∞—Ç–∞–∫—É–µ—Ç —Ä–æ–µ–º —Å–≤–µ—Ç–ª—è—á–∫–æ–≤! ‚ú®ü¶ü",
            lambda: f"{self.player2.mention} —É–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç –º–æ—â–Ω–æ–≥–æ —É–¥–∞—Ä–∞! üèÉ‚Äç‚ôÇÔ∏èüí®",
            lambda: f"{self.player2.mention} –Ω–∞–Ω–æ—Å–∏—Ç –æ—Ç–≤–µ—Ç–Ω—ã–π —É–¥–∞—Ä! ‚ö°Ô∏è",
            # –û–±—â–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
            lambda: "üå∏ –õ–µ–ø–µ—Å—Ç–∫–∏ —Å–∞–∫—É—Ä—ã –∑–∞–ø—É—Ç—ã–≤–∞—é—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤!",
            lambda: "‚ö°Ô∏è –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ —à–æ–∫–∏—Ä—É–µ—Ç –æ–±–æ–∏—Ö –±–æ–π—Ü–æ–≤!",
            lambda: "üéè –ö–∞—Ä–ø—ã –∫–æ–∏ –æ–±—Ä–∞–∑—É—é—Ç –≤–æ–¥—è–Ω–æ–π —Å–º–µ—Ä—á! üêüüå™Ô∏è",
            lambda: "üçµ –í–Ω–µ–∑–∞–ø–Ω—ã–π –¥–æ–∂–¥—å —á–∞–π–Ω—ã—Ö –ª–∏—Å—Ç—å–µ–≤ –∑–∞—Ç—Ä—É–¥–Ω—è–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å!",
            lambda: "üéé –ö—É–∫–ª—ã-—Ç–µ—Ä—Ä–∞–∫–æ—Ç–∞ –æ–∂–∏–≤–∞—é—Ç –∏ –≤–º–µ—à–∏–≤–∞—é—Ç—Å—è –≤ –±–æ–π! üè∫",
            lambda: "üåô –õ—É–Ω–Ω—ã–π —Å–≤–µ—Ç —É—Å–∏–ª–∏–≤–∞–µ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏!",
            lambda: "üç∂ –ë–æ—á–æ–Ω–æ–∫ —Å–∞–∫–µ –≤–∑—Ä—ã–≤–∞–µ—Ç—Å—è, –æ–∫—É—Ç—ã–≤–∞—è –ø–æ–ª–µ –±–æ—è –ø–∞—Ä–æ–º!",
            lambda: "ü¶ä –•–≤–æ—Å—Ç –∫–∏—Ü—É–Ω—ç —Å–º–µ—Ç–∞–µ—Ç –≤—Å—ë –Ω–∞ —Å–≤–æ—ë–º –ø—É—Ç–∏!",
            lambda: "üåÄ –¢–∞–π—Ñ—É–Ω –æ—Å–µ–Ω–Ω–∏—Ö –ª–∏—Å—Ç—å–µ–≤ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –≤–æ–∫—Ä—É–≥ –±–æ–π—Ü–æ–≤!",
            lambda: "üéë –ù–æ—á–Ω—ã–µ —Ü–∏–∫–∞–¥—ã –Ω–∞—á–∏–Ω–∞—é—Ç –æ–≥–ª—É—à–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ–Ω–∏–µ! ü¶ó"
        ]
    
    def kemyu_reactions(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–µ–∞–∫—Ü–∏–π –ö—ë–º—É"""
        return [
            "„Äé –ö—ë–º—É —É–¥–∏–≤–ª—ë–Ω! „ÄèüòÆ",
            "„Äé –ö—ë–º—É —Ö–º—É—Ä–∏—Ç—Å—è! „Äèüò†",
            "„Äé –ö—ë–º—É —Å–º–µ—ë—Ç—Å—è! „ÄèüòÇ",
            "„Äé –ö—ë–º—É —É–ª—ã–±–∞–µ—Ç—Å—è! „Äèüòä",
            "„Äé –ö—ë–º—É –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ! „ÄèüòÉ",
            "„Äé –ö—ë–º—É –∑–∞–¥—É–º—á–∏–≤! „Äèü§î"
        ]
    
    def player_reactions(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–µ–∞–∫—Ü–∏–π –∏–≥—Ä–æ–∫–æ–≤"""
        return [
            f"{self.player1.mention} –ø–æ–¥–Ω–∏–º–∞–µ—Ç –∫—É–ª–∞–∫ –≤ –∑–Ω–∞–∫ —Ä–µ—à–∏–º–æ—Å—Ç–∏!",
            f"{self.player2.mention} –æ—Ç–≤–µ—á–∞–µ—Ç –±—Ä–æ—Å–∫–æ–º –≤ –æ—Ç–≤–µ—Ç!",
            f"{self.player1.mention} —Å —É–ª—ã–±–∫–æ–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—ã–∑–æ–≤!",
            f"{self.player2.mention} –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫–µ!",
            f"{self.player1.mention} –≤—ã–∫—Ä–∏–∫–∏–≤–∞–µ—Ç –±–æ–µ–≤–æ–π –∫–ª–∏—á!",
            f"{self.player2.mention} —Å —É—Å–º–µ—à–∫–æ–π –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –∞—Ç–∞–∫—É!",
            f"{self.player1.mention} —É–≤–µ—Ä–µ–Ω–Ω–æ —à–∞–≥–∞–µ—Ç –≤–ø–µ—Ä—ë–¥!",
            f"{self.player2.mention} –±—ã—Å—Ç—Ä–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —É–¥–∞—Ä!"
        ]

    async def battle_animation(self, msg):
        phases = [
            "**üåÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –±–æ—é:** –î—É—Ö–∏ –ø—Ä–∏—Ä–æ–¥—ã –Ω–∞–±–ª—é–¥–∞—é—Ç...",
            "**‚öîÔ∏è –†–∞—É–Ω–¥ 1:** –ü–µ—Ä–≤—ã–µ –∞—Ç–∞–∫–∏!",
            "**üå™Ô∏è –†–∞—É–Ω–¥ 2:** –≠—Å–∫–∞–ª–∞—Ü–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞!",
            "**üí• –†–∞—É–Ω–¥ 3:** –†–µ—à–∞—é—â–∞—è —Å—Ö–≤–∞—Ç–∫–∞!",
            "**üéá –§–∏–Ω–∞–ª:** –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä—ã–≤–æ–∫!"
        ]
        
        for phase in phases:
            await msg.edit(content=f"{msg.content}\n\n{phase}")
            await asyncio.sleep(self.message_delay)
            
            # –ó–∞ —Ñ–∞–∑—É –≤—ã–≤–æ–¥—è—Ç—Å—è –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—è ‚Äì –ø–æ –æ–¥–Ω–æ–º—É –æ—Ç –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            action1 = random.choice(self.generate_actions())()
            action2 = random.choice(self.generate_actions())()
            await msg.edit(content=f"{msg.content}\n{action1}\n{action2}")
            await asyncio.sleep(self.message_delay)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –∏–≥—Ä–æ–∫–æ–≤ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50%
            if random.random() < 0.5:
                player_reaction = random.choice(self.player_reactions())
                await msg.edit(content=f"{msg.content}\n{player_reaction}")
                await asyncio.sleep(self.message_delay)
            
            # –†–µ–∞–∫—Ü–∏—è –ö—ë–º—É —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50%
            if random.random() < 0.5:
                kemu_reaction = random.choice(self.kemyu_reactions())
                await msg.edit(content=f"{msg.content}\n{kemu_reaction}")
                await asyncio.sleep(self.message_delay)
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –ö—ë–º—É —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 40%
                if random.random() < 0.4:
                    extra_reactions = [
                        "„Äé –ö—ë–º—É –∂—É—ë—Ç –º–æ—Ç–∏ –∏ –∞–ø–ª–æ–¥–∏—Ä—É–µ—Ç! „Äèüç°üëè",
                        "„Äé –ö—ë–º—É –º–∞—à–µ—Ç —Ñ–ª–∞–≥–æ–º —Å —Å–∏–º–≤–æ–ª–æ–º —Ö—Ä–∞–º–∞! „Äè‚õ©Ô∏è",
                        "„Äé –ö—ë–º—É –∏–≥—Ä–∞–µ—Ç –Ω–∞ —Å—è–∫—É—Ö–∞—Ç–∏! „Äèüé∂üéç",
                        "„Äé –ö—ë–º—É –≤–æ—Å—Ç–æ—Ä–∂–µ–Ω–Ω–æ –∫—Ä–∏—á–∏—Ç! „ÄèüòÜ",
                        "„Äé –ö—ë–º—É —Å–ª–µ–≥–∫–∞ –ø–æ–¥–º–∏–≥–∏–≤–∞–µ—Ç! „Äèüòâ"
                    ]
                    await msg.edit(content=f"{msg.content}\n{random.choice(extra_reactions)}")
                    await asyncio.sleep(self.message_delay)

    @discord.ui.button(label="–ù–∞—á–∞—Ç—å –±–æ–π!", style=discord.ButtonStyle.green, emoji="‚öîÔ∏è")
    async def start_battle(self, interaction: discord.Interaction, button: Button):
        await interaction.response.defer()
        
        # –ù–∞—á–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
        embed = discord.Embed(description="üïí **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞—Ä–µ–Ω—ã...**")
        msg = await interaction.followup.send(embed=embed)
        
        await asyncio.sleep(self.message_delay)
        await msg.edit(embed=discord.Embed(
            title="‚öîÔ∏è –ë–æ–π –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è!",
            description=f"{self.player1.mention} vs {self.player2.mention}",
            color=0xe5d4c0
        ))
        
        await self.battle_animation(msg)
        
        winner = await self.determine_winner()
        if not winner:
            result = "üå∏ –ë–æ–π –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –≤–Ω–∏—á—å—é! –û–±–∞ –¥–æ—Å—Ç–æ–π–Ω—ã —É–≤–∞–∂–µ–Ω–∏—è."
        else:
            reward = await self.give_reward(winner)
            result = f"""üéå **–ü–û–ë–ï–î–ò–¢–ï–õ–¨:** {winner.mention}
{reward}
„Äé –ö—ë–º—É —Å–æ–≤–µ—Ä—à–∞–µ—Ç —Ä–∏—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–∫–ª–æ–Ω „Äèüôá"""
        
        result_embed = discord.Embed(
            title="üçÅ –ò—Ç–æ–≥–∏ –°—Ä–∞–∂–µ–Ω–∏—è",
            description=result,
            color=0xe5d4c0
        ).set_thumbnail(url="https://i.pinimg.com/originals/7a/ed/30/7aed30356cb8df5aea46c7b3a82d1f52.gif")
        
        await msg.edit(embed=result_embed)
        self.stop()

class KemuCommands(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.drunk_manager = bot.drunk_manager
        self.inventory_manager = bot.inventory_manager

    @app_commands.command(name="–±–∏–æ–≥—Ä–∞—Ñ–∏—è", description="–ü–æ–∫–∞–∑–∞—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é –ö—ë–º—É üé¥")
    async def biography(self, interaction: discord.Interaction):
        try:
            with open("data/biography.txt", "r", encoding="utf-8") as f:
                bio_text = f.read()
        except Exception as e:
            bio_text = "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏: {e}")

        embed = BioEmbed()
        embed.color = 0xe5d4c0
        embed.description = (
            f"*¬´–¶–≤–µ—Ç–æ–∫ —Å–∞–∫—É—Ä—ã –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç—Å—è —Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å—Å—è¬ª*\n\n"
            f"{bio_text}\n\n"
            f"üçô **–ü—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç:** {interaction.user.mention}"
        )
        embed.set_thumbnail(url="https://i.pinimg.com/736x/b2/b0/4b/b2b04b4ce6c3ee97035bd29c64306131.jpg")
        
        view = discord.ui.View()
        view.add_item(discord.ui.Button(
            label="–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å",
            style=discord.ButtonStyle.primary,
            emoji="üå∏",
            url=f"https://discord.com/users/{USER_ID}"
        ))
        
        await interaction.response.send_message(embed=embed, view=view)
        logger.info(f"üìú {interaction.user} –∑–∞–ø—Ä–æ—Å–∏–ª –±–∏–æ–≥—Ä–∞—Ñ–∏—é")

    @app_commands.command(name="–≤—ã–ø–∏—Ç—å", description="–í—ã–ø–∏—Ç—å —Ä–∏—Ç—É–∞–ª—å–Ω–æ–µ —Å–∞–∫–µ üç∂")
    async def drink(self, interaction: discord.Interaction):
        try:
            if not interaction.guild.me.guild_permissions.manage_nicknames:
                await interaction.response.send_message(
                    "üåÄ –ö—ë–º—É –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å –Ω–∏–∫–∏!",
                    ephemeral=True
                )
                return

            is_admin = interaction.user.guild_permissions.administrator
            success = await self.drunk_manager.process_drink(interaction.user, interaction.guild, is_admin)
            
            if not success:
                await interaction.response.send_message(
                    "üåÄ –í—ã —É–∂–µ –ø–æ–¥ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ–º —Å–∞–∫–µ!",
                    ephemeral=True
                )
                return

            drunk_messages = [
                "–ø–æ–¥ –∫–∞–π—Ñ–æ–º –æ—Ç —Å–∞–∫–µ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –¥—Ä–µ–≤–Ω–∏–µ –ª–µ–≥–µ–Ω–¥—ã!",
                "—Å –ª–µ–≥–∫–æ–π –Ω–µ—Ä–∞–∑–±–µ—Ä–∏—Ö–æ–π –≤ –≥–æ–ª–æ—Å–µ –∑–∞—è–≤–ª—è–µ—Ç: '–°–∞–∫–µ –¥–∞—Ä—É–µ—Ç –º–Ω–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ!'",
                "–µ–≥–æ —Å–º–µ—Ö —Ä–∞–∑–Ω–æ—Å–∏—Ç—Å—è –ø–æ –∑–∞–ª—É, —Å–ª–æ–≤–Ω–æ –∑–≤–æ–Ω –±–æ–∫–∞–ª–æ–≤!",
                "–Ω–∞ –º–≥–Ω–æ–≤–µ–Ω–∏–µ –∑–∞–±—ã–≤–∞–µ—Ç –æ –º–∏—Ä–µ, –ø–æ–≥—Ä—É–∂–∞—è—Å—å –≤ —Å–∞–∫—Ä–∞–ª—å–Ω–æ–µ –≤–µ—Å–µ–ª—å–µ!"
            ]
            embed = discord.Embed(
                title="üç∂ –†–∏—Ç—É–∞–ª –û—á–∏—â–µ–Ω–∏—è",
                description=f"{interaction.user.mention} {random.choice(drunk_messages)}",
                color=0xe5d4c0
            )
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            await interaction.response.send_message(
                "üåÄ –†–∏—Ç—É–∞–ª –ø—Ä–µ—Ä–≤–∞–Ω ‚Äî –¥—É—Ö–∏ —Å–∞–∫–µ –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç!",
                ephemeral=True
            )
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /–≤—ã–ø–∏—Ç—å: {e}")

    @app_commands.command(name="–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", description="–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ üéé")
    async def inventory(self, interaction: discord.Interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            user_id = str(interaction.user.id)
            inventory = self.inventory_manager.get_user_inventory(user_id)
            
            embed = discord.Embed(
                title="üóÉÔ∏è –¢–∞–π–Ω–æ–µ –•—Ä–∞–Ω–∏–ª–∏—â–µ",
                color=0xe5d4c0
            ).set_thumbnail(url="https://i.pinimg.com/originals/e2/62/eb/e262ebb7707f8b83cb282c2f63cd4993.gif")
            
            if not inventory:
                embed.description = "–ü—É—Å—Ç–æ... –î–∞–∂–µ –ø—ã–ª–∏–Ω–∫–∏ –Ω–µ—Ç! üçÇ"
            else:
                for item_id, count in inventory.items():
                    item = self.inventory_manager.get_item_info(item_id)
                    embed.add_field(
                        name=f"{item['name']} √ó{count}",
                        value=f"*{item['description']}*",
                        inline=False
                    )
            
            await interaction.followup.send(embed=embed)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: {e}")

    @app_commands.command(name="–±–æ–∏_—Ç–∞–Ω—É–∫–∏", description="–í—ã–∑–æ–≤ –Ω–∞ —Ä–∏—Ç—É–∞–ª—å–Ω—ã–π –±–æ–π üçÉ")
    @app_commands.describe(–æ–ø–ø–æ–Ω–µ–Ω—Ç="–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞")
    async def tanuki_battle(self, interaction: discord.Interaction, –æ–ø–ø–æ–Ω–µ–Ω—Ç: discord.Member):
        if –æ–ø–ø–æ–Ω–µ–Ω—Ç == interaction.user:
            return await interaction.response.send_message("üåÄ –ù–µ–ª—å–∑—è —Å—Ä–∞–∂–∞—Ç—å—Å—è —Å–æ —Å–≤–æ–∏–º –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ–º!", ephemeral=True)
            
        view = BattleView(interaction.user, –æ–ø–ø–æ–Ω–µ–Ω—Ç, self.inventory_manager)
        embed = discord.Embed(
            title="‚öîÔ∏è –í—ã–∑–æ–≤ –ü—Ä–∏–Ω—è—Ç!",
            description=f"{interaction.user.mention} –≤—ã–∑—ã–≤–∞–µ—Ç {–æ–ø–ø–æ–Ω–µ–Ω—Ç.mention} –Ω–∞ —Å–≤—è—â–µ–Ω–Ω—ã–π –±–æ–π!",
            color=0xe5d4c0
        ).set_image(url="https://i.pinimg.com/originals/52/9f/9c/529f9ce3e4bdd0fd5eccc2ee36134c87.gif")
        
        await interaction.response.send_message(embed=embed, view=view)

    @app_commands.command(name="–ø–æ–º–æ—â—å", description="–û—Ç–∫—Ä—ã—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –º—É–¥—Ä–æ—Å—Ç–∏ üìú")
    async def help(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="üé¥ –°–≤–∏—Ç–æ–∫ –ó–Ω–∞–Ω–∏–π –ö—ë–º—É",
            description="```diff\n+ –î–æ—Å—Ç—É–ø–Ω—ã–µ –†–∏—Ç—É–∞–ª—ã:\n```",
            color=0xe5d4c0
        ).add_field(
            name="üç∂ –û—Å–Ω–æ–≤–Ω—ã–µ –ü—Ä–∞–∫—Ç–∏–∫–∏",
            value="‚Ä¢ `/–±–∏–æ–≥—Ä–∞—Ñ–∏—è` - –ò—Å—Ç–æ—Ä–∏—è –¥—É—Ö–∞\n‚Ä¢ `/–≤—ã–ø–∏—Ç—å` - –†–∏—Ç—É–∞–ª—å–Ω–æ–µ –æ—á–∏—â–µ–Ω–∏–µ\n‚Ä¢ `/–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å` - –°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞",
            inline=False
        ).add_field(
            name="üéå –ë–æ–µ–≤—ã–µ –ò—Å–∫—É—Å—Å—Ç–≤–∞",
            value="‚Ä¢ `/–±–æ–∏_—Ç–∞–Ω—É–∫–∏` - –í—ã–∑–æ–≤ –Ω–∞ –ø–æ–µ–¥–∏–Ω–æ–∫",
            inline=False
        ).set_image(url="https://i.pinimg.com/originals/e8/2d/89/e82d895dcb38cf4fcee7d5dad950183e.gif")
        
        await interaction.response.send_message(embed=embed)

async def setup_commands(bot: commands.Bot):
    await bot.add_cog(KemuCommands(bot))
